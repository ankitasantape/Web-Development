C:\Users\Admin\Desktop\nodews>cd contact_list

C:\Users\Admin\Desktop\nodews\contact_list>npm init        
This utility will walk you through creating a package.json 
file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help init` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg>` afterwards to install a package andsave it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (contact_list)
version: (1.0.0)
description: a basic contact list to learn express js as a 
framework
entry point: (index.js)
test command:
git repository: 
keywords: AnkitaSantape
author: AnkitaSantape
license: (ISC)
About to write to C:\Users\Admin\Desktop\nodews\contact_list\package.json:

{
  "name": "contact_list",
  "version": "1.0.0",
  "description": "a basic contact list to learn express js 
as a framework",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
    "test": "echo \"Error: no test specified\" && exit 1"  
  },
  "keywords": [
    "AnkitaSantape"
  ],
  "author": "AnkitaSantape",
  "license": "ISC"
}


Is this OK? (yes)
                                                           ess
C:\Users\Admin\Desktop\nodews\contact_list>npm install exprT express@4.17.1 OK f ess
[..................] \ idealTree:express: sill placeDep ROO[..................] \ idealTree:express: sill placeDep ROO[..................] \ idealTree:express: sill placeDep ROO[..................] \ idealTree:express: sill placeDep ROO[..................] \ idealTree:express: sill placeDep ROO[..................] | idealTree:express: sill placeDep ROO[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] - idealTree:vary: sill fetch manifest 
[     .............] \ idealTree:vary: sill fetch manifest 
[     .............] | idealTree:vary: sill fetch manifest 
[     .............] | idealTree:vary: sill fetch manifest 
[     .............] | idealTree:vary: sill fetch manifest 
[     .............] | idealTree:vary: sill fetch manifest 
[     .............] / idealTree:vary: sill fetch manifest 
[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] - idealTree:negotiator: sill fetch man[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] / idealTree:raw-body: sill fetch manif[ .................] \ idealTree:raw-body: sill fetch manif[         .........] | idealTree: timing idealTree Complete[         .........] | idealTree: timing idealTree Complete[         .........] | idealTree: timing idealTree Complete[         .........] - reify:express: timing reify:loadBund[         .........] - reify:express: timing reify:loadBund[         .........] - reify:express: timing reify:loadBund[         .........] - reify:express: timing reify:loadBund[         .........] \ reify:express: timing reify:loadBund[         .........] \ reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] | reify:express: timing reify:loadBund[         .........] - reify:ms: timing reifyNode:node_modu[          ........] / reify:destroy: timing reifyNode:node[          ........] / reify:destroy: timing reifyNode:node[          ........] / reify:destroy: timing reifyNode:node[          ........] / reify:destroy: timing reifyNode:node[          ........] / reify:destroy: timing reifyNode:node[          ........] \ reify:forwarded: timing reifyNode:no[          ........] \ reify:forwarded: timing reifyNode:no[           .......] / reify:unpipe: timing reifyNode:node_[             .....] - reify:fresh: timing reifyNode:node_m[             .....] - reify:fresh: timing reifyNode:node_m[             .....] \ reify:content-type: timing reifyNode[              ....] / reify:proxy-addr: timing reifyNode:n[               ...] | reify:serve-static: timing reifyNode[               ...] | reify:serve-static: timing reifyNode[               ...] / reify:http-errors: timing reifyNode:[               ...] - reify:safe-buffer: timing reifyNode:[               ...] | reify:send: timing reifyNode:node_mo[               ...] | reify:send: timing reifyNode:node_mo[               ...] | reify:send: timing reifyNode:node_mo[               ...] | reify:send: timing reifyNode:node_mo[               ...] | reify:send: timing reifyNode:node_mo[                ..] - reify:statuses: timing reifyNode:nod[                ..] - reify:statuses: timing reifyNode:nod[                ..] - reify:statuses: timing reifyNode:nod[                ..] - reify:statuses: timing reifyNode:nod[                ..] \ reify:safer-buffer: timing reifyNode[                ..] | reify:ipaddr.js: timing reifyNode:no[                ..] | reify:ipaddr.js: timing reifyNode:no[                ..] | reify:ipaddr.js: timing reifyNode:no[                ..] | reify:ipaddr.js: timing reifyNode:no[                ..] | reify:ipaddr.js: timing reifyNode:no[                ..] | reify:ipaddr.js: timing reifyNode:no[                ..] / reify:negotiator: timing reifyNode:n[                ..] / reify:negotiator: timing reifyNode:n[                 .] - reify:mime: timing reifyNode:node_mo[                 .] - reify:mime: timing reifyNode:node_mo[                 .] - reify:mime: timing reifyNode:node_mo[                 .] \ reify:depd: timing reifyNode:node_mo[                 .] \ reify:depd: timing reifyNode:node_mo[                 .] | reify:body-parser: timing reifyNode:[                 .] | reify:body-parser: timing reifyNode:[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] \ reify:mime-types: http fetch GET 200[                 .] | reify:qs: timing reifyNode:node_modu[                  ] - reify:mime-db: http fetch GET 200 ht[                  ] \ reify:express: timing reifyNode:node[                  ] \ reify:express: timing reifyNode:node[                  ] \ reify:express: timing reifyNode:node[                  ] \ reify:express: timing reifyNode:node[                  ] \ reify:express: timing reifyNode:node[                  ] \ reify:iconv-lite: timing reifyNode:n[                  ] \ reify:iconv-lite: timing reifyNode:n[                  ] \ reify:iconv-lite: timing reifyNode:n[                  ] \ reify:iconv-lite: timing reifyNode:n[                  ] \ reify:iconv-lite: timing reifyNode:n[                  ] \ reify:iconv-lite: timing reifyNode:n[                  ] / reify:iconv-lite: timing reifyNode:n
added 50 packages, and audited 51 packages in 24s

found 0 vulnerabilities

C:\Users\Admin\Desktop\nodews\contact_list>npm install ejs

added 15 packages, and audited 66 packages in 15s

found 0 vulnerabilities

Quick Revision:
First install ejs
2) app.set
    i)view engine
    ii)view path
3) Views directory + file
4) Render + using res.Render
   extension is not html it is ejs for your view file home.ejs
Now, we have reached MVC{ we have done v-view and c-controller, in the next we will send a request from controller to view and make our app dynamic } 

How to debug?
Why my server is not running or it is crashing.
Error:
1. library - you have used library but not included
2. Syntax - either u have not closed brackets or "  "

23. Playing With EJS

 <ul>
 // if you don't want to print anything don't use equal to <% %>
            <% for (let i = 1; i<6 ; i++ ){%>
            <li>
                <%= i%>  // whenever we are going to print something   // use <%= %> equal to 
            </li>
            <%}%>   
</ul>

26. Locals In Views
Locals is a global object, basically everything is in JavaScript is an object
so, your response is also an object and it has different keys
  res = {
          --------
          --------
          --------
        }
  locals: {

      title: " ";
  }      
app.get('/practice', function(req, res){
    
    return res.render('practice',{ 
        title:"Playing With EJS" // This is being passed to view or the template. This is called context, whenever this context is being passed, one of this key is ( locals : { } ) and this key(locals) is an object
    });
});

ExpressJs
9. What and How is Middleware?
Middleware: Middleware is a function which has access to your request and response, also it analyze the data present your request and response, reprocess I would say.
It also manipulate data from request and response, it has possibility to return response and it can show error.
app.use(express.urlencoded());

Why we need Middleware?
There are some command thing which we need do, like preprocessing  a data.whenever our form submitting some data we needed to convert it into ( key , value ) pair it would be sent to the browser while it was encoding.
